name: 'Setup Java w/ CodeArtifact'
description: 'Setup java + maven, login to AWS and generate CodeArtifact token'
inputs:
  aws-account:
    description: 'AWS account number where the CodeArtifact domain is located'
    required: true
  aws-region:
    description: 'AWS region where the CodeArtifact domain is located'
    required: true
  aws-role:
    description: 'IAM role to assume, good option is /ci/builder'
    default: 'ci/builder' # this role should have permissions to access CodeArtifact
    required: true
  aws-codeartifact-domain:
    description: 'CodeArtifact domain name'
    required: true
  aws-codeartifact-repository:
    description: 'CodeArtifact repository name'
    default: 'maven' # default repository name
    required: true
  aws-login:
    description: 'Login to AWS. Could be false if you login in AWS outside of this action'
    required: false
    default: 'true'
  java-cache:
    description: 'Enabled by default, specify empty string to disable caching'
    required: false
    default: 'maven'
  java-version:
    description: 'Java version to use'
    required: false
    default: '21' # latest LTS as of June 2025
  java-distribution:
    description: 'Java distribution, use Temurin as it is pre-cached in ubuntu-latest'
    required: false
    default: 'temurin'
  settings-mirrors:
    description: 'settings.xml mirrors section (optional)'
    required: false
  settings-pluginGroups:
    description: 'settings.xml pluginGroups section (optional)'
    required: false
  settings-pluginRepositories:
    description: 'Additional plugin repositories (besides CodeArtifact one)'
    required: false
    default: |
      <pluginRepository>
        <id>central</id>
        <url>https://central.maven.org/maven2/</url>
      </pluginRepository>
      <pluginRepository>
        <id>repo1</id>
        <url>https://repo1.maven.org/maven2/</url>
      </pluginRepository>
  settings-profile-properties:
    description: 'settings.xml profile properties (optional)'
    required: false
  settings-proxies:
    description: 'settings.xml proxies section (optional)'
    required: false
  settings-repositories:
    description: 'Additional repositories (besides CodeArtifact one)'
    required: false
    default: |
      <repository>
        <id>central</id>
        <url>https://central.maven.org/maven2/</url>
      </repository>
      <repository>
        <id>repo1</id>
        <url>https://repo1.maven.org/maven2/</url>
      </repository>

runs:
  using: "composite"
  steps:
    - name: Validate
      shell: bash
      run: |
        if [[ "${{ inputs.java-cache }}" != "maven" && "${{ inputs.java-cache }}" != "" ]]; then
          echo "Error: input 'java-cache' must be either 'maven' or an empty string." >&2
          exit 1
        fi

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: ${{ inputs.java-distribution }}
        cache: ${{ inputs.java-cache }} # this will give cache inheritance and such cache hit and quick builds on feature branches/PRs

    - name: Info
      shell: bash
      run: mvn -v

    # receives a JWT from the GitHub OIDC provider, and then requests an access token from AWS
    # as result we got env vars: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY and AWS_SESSION_TOKEN
    - name: Login AWS
      if: ${{ inputs.aws-login == 'true' }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: arn:aws:iam::${{ inputs.aws-account }}:role/${{ inputs.aws-role }}

    - name: Generate CodeArtifact token and url
      id: codeartifact
      shell: bash
      run: |
        TOKEN=`aws codeartifact get-authorization-token --domain ${{ inputs.aws-codeartifact-domain }} --query authorizationToken --output text`
        echo "::add-mask::$TOKEN"
        echo "TOKEN=$TOKEN" >> $GITHUB_OUTPUT
        HOST="${{ inputs.aws-codeartifact-domain }}-${{ inputs.aws-account }}.d.codeartifact.${{ inputs.aws-region }}.amazonaws.com"
        echo "HOST=$HOST" >> $GITHUB_OUTPUT
        echo "ARTIFACT_STORE_HOST=$HOST" >> $GITHUB_ENV
        REPO_ID="${{ inputs.aws-codeartifact-domain }}-${{ inputs.aws-codeartifact-repository }}"
        echo "REPO_ID=$REPO_ID" >> $GITHUB_OUTPUT

    - name: Generate Maven settings.xml
      shell: bash
      run: |
        mkdir -p $HOME/.m2
        cat <<EOF > $HOME/.m2/settings.xml
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" 
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
          <activeProfiles>
            <activeProfile>github</activeProfile>
          </activeProfiles>
          <profiles>
            <profile>
              <id>github</id>
              <properties>${{ inputs.settings-profile-properties }}</properties>
              <repositories>
                ${{ inputs.settings-repositories }}
                <repository>
                  <id>${{ steps.codeartifact.outputs.REPO_ID }}</id>
                  <url>https://${{ steps.codeartifact.outputs.HOST }}/${{ inputs.aws-codeartifact-repository }}/maven/</url>
                </repository>
              </repositories>
              <pluginRepositories>
                ${{ inputs.settings-pluginRepositories }}
                <pluginRepository>
                  <id>${{ steps.codeartifact.outputs.REPO_ID }}</id>
                  <url>https://${{ steps.codeartifact.outputs.HOST }}/${{ inputs.aws-codeartifact-repository }}/maven/</url>
                </pluginRepository>
              </pluginRepositories>
            </profile>
          </profiles>
          <servers>
            <server>
              <id>${{ steps.codeartifact.outputs.REPO_ID }}</id>
              <username>aws</username>
              <password>${{ steps.codeartifact.outputs.TOKEN }}</password>
            </server>
          </servers>
          <mirrors>${{ inputs.settings-mirrors }}</mirrors>
          <pluginGroups>${{ inputs.settings-pluginGroups }}</pluginGroups>
          <proxies>${{ inputs.settings-proxies }}</proxies>
        </settings>
        EOF

    - name: Debug
      shell: bash
      run: cat $HOME/.m2/settings.xml # see ci.settings.xml
