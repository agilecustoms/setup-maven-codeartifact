name: 'Prepare Java'
description: 'Setup java + maven, login to AWS and generate CodeArtifact token'
inputs:
  aws-account:
    description: 'AWS account number where the CodeArtifact domain is located'
    required: true
  role-name:
    description: 'IAM role to assume'
    required: false
    default: 'reader'
runs:
  using: "composite"
  steps:
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin' # not default, but pre-cached in ubuntu-latest (24)
        cache: maven # this will give cache inheritance and such cache hit and quick builds on feature branches/PRs

    - name: Info
      shell: bash
      run: mvn -v

    # receives a JWT from the GitHub OIDC provider, and then requests an access token from AWS
    # as result we got env vars: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY and AWS_SESSION_TOKEN
    - name: Login AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::${{ inputs.aws-account }}:role/ci/${{ inputs.role-name }}

    - name: Generate CodeArtifact token and url
      id: codeartifact
      shell: bash
      run: |
        domain=agilecustoms
        TOKEN=`aws codeartifact get-authorization-token --domain $domain --query authorizationToken --output text`
        echo "::add-mask::$TOKEN"
        echo "TOKEN=$TOKEN" >> $GITHUB_OUTPUT
        HOST="$domain-${{ inputs.aws-account }}.d.codeartifact.us-east-1.amazonaws.com"
        echo "HOST=$HOST" >> $GITHUB_OUTPUT
        echo "ARTIFACT_STORE_HOST=$HOST" >> $GITHUB_ENV
      # TOKEN used only in settings.xml file, while HOST is used both in settings.xml AND parent pom.xml 'distributionManagement'
      #  so it is additionally put in env variable 'ARTIFACT_STORE_URL', see pom.xml files in 'java-parent' repos
      # Dec-31,2024 I triple checked: such env variable is JOB-scoped, so it indeed become available in job that calls this action

    # First I tried "s4u/maven-settings-action@v3.0.0" - it was more concise, but I doesn't support pluginRepositories
    # There is no setting how to call resulting profile (it is always "github"), but there is a setting to activate it (active_profiles)
    - name: Setup Maven settings.xml
      uses: whelk-io/maven-settings-xml-action@v22
      with:
        servers: >
          [
            {
              "id": "agilecustoms-maven",
              "username": "aws",
              "password": "${{ steps.codeartifact.outputs.TOKEN }}"
            }
          ]
        repositories: >
          [
            {
              "id": "central",
              "url": "https://central.maven.org/maven2/"
            },
            {
              "id": "mirror",
              "url": "https://repo1.maven.org/maven2/"
            },
            {
              "id": "agilecustoms-maven",
              "url": "https://${{ steps.codeartifact.outputs.HOST }}/maven/maven/"
            }
          ]
        plugin_repositories: >
          [
            {
              "id": "central",
              "url": "https://central.maven.org/maven2/"
            },
            {
              "id": "mirror",
              "url": "https://repo1.maven.org/maven2/"
            },
            {
              "id": "agilecustoms-maven",
              "url": "https://${{ steps.codeartifact.outputs.HOST }}/maven/maven/"
            }
          ]
        active_profiles: >
          [
            "github"
          ]

#    - name: Debug
#      shell: bash
#      run: cat /home/runner/.m2/settings.xml # see sample.settings.xml
